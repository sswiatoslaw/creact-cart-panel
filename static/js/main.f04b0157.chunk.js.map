{"version":3,"sources":["store/types.js","store/reducer.js","store/store.js","component/Button.jsx","store/actions.js","component/Product.jsx","api/getProducts.js","component/Modal.jsx","pages/product.js","pages/cart.js","pages/favorite.js","component/Header.jsx","App.js","index.js"],"names":["GET_PRODUCTS","SET_STATEMODAL","ADD_CART","REMOVE_CART","ADD_FAVORITES","IMPORT_FAVORITES","REMOVE_FAVORITES","IMPORT_CART","initialState","products","cart","favorites","isOpenModal","reducer","state","action","type","types","payload","key","localStorage","setItem","JSON","stringify","filteredCart","filter","obj","filteredFavorites","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","Button","props","text","onclick","color","colorText","style","background","onClick","setStateModal","importCart","Product","name","price","image","article","fullProduct","dispatch","useDispatch","id","className","src","alt","getProducts","axios","get","Modal","useSelector","header","classStyle","toggleModal","fontSize","ProductPage","product","productKey","useEffect","localCart","getItem","localFavorite","then","res","data","parse","closeModal","map","item","CartPage","productsCart","FavoritePage","productsFavorites","localFavorites","Header","to","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f04b0157.chunk.js","sourcesContent":["export const GET_PRODUCTS = 'GET_PRODUCTS'\r\nexport const SET_STATEMODAL = 'SET_STATEMODAL'\r\nexport const ADD_CART = 'ADD_CART'\r\nexport const REMOVE_CART = 'REMOVE_CART'\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES'\r\nexport const IMPORT_FAVORITES = 'IMPORT_FAVORITES'\r\nexport const REMOVE_FAVORITES = 'REMOVE_FAVORITES'\r\nexport const IMPORT_CART = 'IMPORT_CART'","import * as types from './types'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    cart: [],\r\n    favorites: [],\r\n    isOpenModal: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_PRODUCTS:\r\n            return {...state, products: action.payload}\r\n\r\n        case types.SET_STATEMODAL:\r\n            return {...state, isOpenModal: {state: !state.isOpenModal.state, key: action.payload}}\r\n\r\n        case types.ADD_CART:\r\n            localStorage.setItem('cart', JSON.stringify([...state.cart, action.payload]))\r\n            return {...state, cart: [...state.cart, action.payload]}\r\n\r\n        case types.REMOVE_CART:\r\n            const filteredCart = state.cart.filter(obj => obj !== action.payload);\r\n            localStorage.setItem('cart', JSON.stringify(filteredCart))\r\n            return {...state, cart: [filteredCart] }\r\n\r\n        case types.IMPORT_CART:\r\n            return {...state, cart: action.payload}\r\n\r\n        case types.ADD_FAVORITES:\r\n            localStorage.setItem('favorites', JSON.stringify([...state.favorites, action.payload]))\r\n            return {...state, favorites: [...state.favorites, action.payload]}\r\n\r\n        case types.REMOVE_FAVORITES:\r\n            const filteredFavorites = state.favorites.filter(obj => obj !== action.payload);\r\n            localStorage.setItem('favorites', JSON.stringify(filteredFavorites))\r\n            return {...state, favorites: [filteredFavorites] }\r\n\r\n        case types.IMPORT_FAVORITES:\r\n            return {...state, favorites: action.payload}\r\n    \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport reducer from './reducer.js'\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  : (f) => f;\r\n\r\nconst store = createStore(\r\n    reducer, devTools\r\n)\r\n\r\nexport default store","import './Button.scss'\r\n\r\nfunction Button(props) {\r\n        const {text, onclick, color, colorText} = props;\r\n        return <button style={{ background: color, color: colorText}} onClick={onclick}>{text}</button>\r\n}\r\n\r\nexport default Button","import * as types from './types'\r\n\r\nexport const addProducts = (products)  => ({\r\n    type: types.GET_PRODUCTS,\r\n    payload: products\r\n})\r\n\r\nexport const setStateModal = (key) => ({\r\n    type: types.SET_STATEMODAL,\r\n    payload: key\r\n})\r\n\r\nexport const addCart = (key) => ({\r\n    type: types.ADD_CART,\r\n    payload: key\r\n})\r\n\r\nexport const removeCart = (key) => ({\r\n    type: types.REMOVE_CART,\r\n    payload: key\r\n})\r\n\r\n\r\nexport const importCart = (obj) => ({\r\n    type: types.IMPORT_CART,\r\n    payload: obj\r\n})\r\n\r\nexport const addFavorites = (key) => ({\r\n    type: types.ADD_FAVORITES,\r\n    payload: key\r\n})\r\n\r\nexport const removeFavorites = (key) => ({\r\n    type: types.REMOVE_FAVORITES,\r\n    payload: key\r\n})\r\n\r\n\r\nexport const importFavorites = (obj) => ({\r\n    type: types.IMPORT_FAVORITES,\r\n    payload: obj\r\n})\r\n\r\n","import Button from './Button';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport './Product.scss'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setStateModal, addFavorites } from '../store/actions';\r\n\r\nconst Product = (props) => {\r\n    const {name, price, image, article, fullProduct, text} = props;\r\n    const dispatch = useDispatch();\r\n    const toggleModal = () =>{\r\n        dispatch(setStateModal(fullProduct))\r\n      }\r\n    const addFavorite = () => {\r\n        dispatch(addFavorites(fullProduct))\r\n    }\r\n\r\n        return (\r\n            <>\r\n            <div id={article} className=\"product\">\r\n                <img src={image} alt={name} />\r\n                <FavoriteIcon onClick={addFavorite} className=\"favorite-icon\"/>\r\n                <div className=\"product-text\">\r\n                    <h1>{name}</h1>\r\n                    <p>{price}$</p>\r\n                </div> \r\n                        <Button onclick={toggleModal} text={text}/>         \r\n            </div>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Product","import axios from 'axios'\r\nconst getProducts = () => {\r\n    return axios.get('./products.json')\r\n}\r\n\r\nexport default getProducts","import CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setStateModal } from '../store/actions';\r\nimport Button from './Button';\r\nimport './Modal.scss'\r\nfunction Modal(props) {\r\n    const isOpenModal = useSelector(state => state.isOpenModal.state);\r\n    const {header, text, classStyle, onClick} = props;\r\n    const dispatch = useDispatch();\r\n    const toggleModal = () =>{\r\n        dispatch(setStateModal());\r\n    }\r\n        return (\r\n            <div style={classStyle} className={isOpenModal ? 'modal active' : 'modal'}>\r\n                                <div className=\"modal-window\">\r\n                                <div className=\"modal-header\">\r\n                                <h1>\r\n                                    {header}\r\n                                </h1>\r\n                                <CloseIcon onClick={toggleModal} className=\"modal-icon\" style={{color: \"#00000\"}} fontSize=\"large\"/>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <p>{text}</p>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <Button onclick={toggleModal} text=\"Нет\"/>\r\n                                <Button onclick={onClick} text=\"Да\"/>\r\n                            </div>\r\n                                </div>\r\n                                </div>\r\n        );\r\n}\r\n\r\nexport default Modal","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Product from '../component/Product';\r\nimport {addCart, addProducts, importCart, importFavorites, setStateModal } from '../store/actions'\r\nimport getProducts from '../api/getProducts'\r\nimport Modal from '../component/Modal';\r\n\r\nconst ProductPage = () => {\r\n    const dispatch = useDispatch();\r\n    const product = useSelector(state => state.products);\r\n    const productKey = useSelector(state => state.isOpenModal.key);\r\n    const toggleModal = () =>{\r\n        dispatch(setStateModal());\r\n    }\r\n    const confirmAction = () => {\r\n        dispatch(setStateModal())\r\n        dispatch(addCart(productKey))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const localCart = localStorage.getItem('cart');\r\n        const localFavorite = localStorage.getItem('favorites');\r\n        getProducts().then(res => {dispatch(addProducts(res.data))})\r\n        {localCart && (dispatch(importCart(JSON.parse(localCart))))}\r\n        {localFavorite && (dispatch(importFavorites(JSON.parse(localFavorite))))}\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Modal\r\n                closeModal={toggleModal}\r\n                header=\"Подтвердите действие\"\r\n                text=\"Вы действительно хотите выполнить это действие?\"\r\n                onClick={confirmAction}\r\n            />\r\n\r\n            {\r\n                product.map((item, id) => {\r\n                    return (\r\n                        <>\r\n                            <Product\r\n                                fullProduct={item}\r\n                                key={id}\r\n                                name={item.name}\r\n                                price={item.price}\r\n                                image={item.image}\r\n                                article={item.article}\r\n                                text=\"В корзину\"\r\n                            />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProductPage","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Product from '../component/Product';\r\nimport { importCart, setStateModal, removeCart } from '../store/actions'\r\nimport Modal from '../component/Modal';\r\n\r\nconst CartPage = () => {\r\n    const dispatch = useDispatch();\r\n    const productsCart = useSelector(state => state.cart);\r\n    const productKey = useSelector(state => state.isOpenModal.key);\r\n    const toggleModal = () =>{\r\n        dispatch(setStateModal());\r\n    }\r\n    const confirmAction = () => {\r\n        dispatch(setStateModal())\r\n        dispatch(removeCart(productKey))\r\n    }\r\n    useEffect(() => {\r\n        const localCart = localStorage.getItem('cart');\r\n        {localCart && (dispatch(importCart(JSON.parse(localCart))))}\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Modal\r\n                closeModal={toggleModal}\r\n                header=\"Подтвердите действие\"\r\n                text=\"Вы действительно хотите выполнить это действие?\"\r\n                onClick={confirmAction}\r\n            />\r\n\r\n            {\r\n                productsCart.map((item, id) => {\r\n                    return (\r\n                        <>\r\n                            <Product\r\n                                fullProduct={item}\r\n                                key={id}\r\n                                name={item.name}\r\n                                price={item.price}\r\n                                image={item.image}\r\n                                article={item.article}\r\n                                text=\"Удалить из корзины\"\r\n                            />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CartPage","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Product from '../component/Product';\r\nimport { importCart, setStateModal, removeFavorites } from '../store/actions'\r\nimport Modal from '../component/Modal';\r\n\r\nconst FavoritePage = () => {\r\n    const dispatch = useDispatch();\r\n    const productsFavorites = useSelector(state => state.favorites);\r\n    const productKey = useSelector(state => state.isOpenModal.key);\r\n    const toggleModal = () =>{\r\n        dispatch(setStateModal());\r\n    }\r\n    const confirmAction = () => {\r\n        dispatch(setStateModal())\r\n        dispatch(removeFavorites(productKey))\r\n    }\r\n    useEffect(() => {\r\n        const localFavorites = localStorage.getItem('favorites');\r\n        {localFavorites && (dispatch(importCart(JSON.parse(localFavorites))))}\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Modal\r\n                closeModal={toggleModal}\r\n                header=\"Подтвердите действие\"\r\n                text=\"Вы действительно хотите выполнить это действие?\"\r\n                onClick={confirmAction}\r\n            />\r\n\r\n            {\r\n                productsFavorites.map((item, id) => {\r\n                    return (\r\n                        <>\r\n                            <Product\r\n                                fullProduct={item}\r\n                                key={id}\r\n                                name={item.name}\r\n                                price={item.price}\r\n                                image={item.image}\r\n                                article={item.article}\r\n                                text=\"Удалить из избранного\"\r\n                            />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FavoritePage","import { Link } from \"react-router-dom\";\r\nimport React from 'react'\r\nimport './Header.scss'\r\nexport default function Header() {\r\n        return (\r\n            <div className=\"header\">\r\n            <Link to=\"/creact-cart-panel/\">Products</Link>\r\n            <Link to=\"/creact-cart-panel/cart\">Cart</Link>\r\n            <Link to=\"/creact-cart-panel/favorite\">Favorite</Link>\r\n            </div>\r\n        )\r\n    }","import {Route, Switch} from 'react-router-dom'\r\nimport ProductPage from './pages/product';\r\nimport CartPage from './pages/cart';\r\nimport FavoritePage from './pages/favorite'\r\nimport Header from './component/Header'\r\nimport './App.scss'\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <div className=\"root\">\r\n        <Switch>\r\n          <Route exact path=\"/creact-cart-panel/\">\r\n            <ProductPage/>\r\n          </Route>\r\n          <Route path=\"/creact-cart-panel/cart/\">\r\n            <CartPage/>\r\n          </Route>\r\n          <Route path=\"/creact-cart-panel/favorite/\">\r\n            <FavoritePage/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}